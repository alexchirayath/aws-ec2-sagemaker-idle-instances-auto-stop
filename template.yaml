AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  NotificationEmail:
    Type: String
    Description: Email for notifying actions taken on EC2 instance. 
    AllowedPattern: (?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9]))\.){3}(?:(2(5[0-5]|[0-4][0-9])|1[0-9][0-9]|[1-9]?[0-9])|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])

Globals:
  Function:
    Runtime: python3.8
    MemorySize: 256
    Timeout: 900

Resources:
  IIASUpdateCWAlarms:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: updateCWAlarms.handler
      Environment:
        Variables:
          SNSTopicArn : !Ref IASSNS
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt [IASSNS ,TopicName]
        - Statement:
          - Sid: IASCWCRUDPolicy
            Effect: Allow
            Action:
              - cloudwatch:DescribeAlarms
              - cloudwatch:PutMetricAlarm
            Resource: "*"
          - Sid: IASKMSUsagePolicy
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !GetAtt [IIASEncryptionKey, Arn]
      Events:
        SNSEvent:
          Type: SNS
          Properties:
            FilterPolicy:
              notificationFor:
              - IIAS_EC2
            Topic: !Ref IASSNS

  IASSNSSageMaker:
    Type: AWS::SNS::Topic
    Properties:
      KmsMasterKeyId: !GetAtt [IIASEncryptionKey,Arn]

  IASSNS:
    Type: AWS::SNS::Topic
    Properties:
      KmsMasterKeyId: !GetAtt [IIASEncryptionKey,Arn]
  
  EmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotificationEmail
      Protocol: email
      TopicArn: !Ref IASSNS
      FilterPolicy:
        notificationFor:
        - IIAS_EMAIL

  EC2Subscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref NotificationEmail
      Protocol: email
      TopicArn: !Ref IASSNS
      FilterPolicy:
        notificationType:
          - email



  IIASGatherInfo:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: gatherEC2Info.handler
      Policies:
        - Statement:
          - Sid: IASEC2DescribePolicy
            Effect: Allow
            Action:
              - ec2:DescribeRegions
              - ec2:DescribeInstances
            Resource: "*"
          - Sid: IASKMSUsagePolicy2
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !GetAtt [IIASEncryptionKey, Arn]
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt [IASSNS ,TopicName]
      Events:
        PeriodicCheck:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
      Environment:
        Variables:
          SNSTopicArn : !Ref IASSNS
  
  IIASEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
          Version: '2012-10-17'
          Statement:
          - Resource: "*"
            Principal:
              AWS:
                Fn::Join:
                - ''
                - - 'arn:aws:iam::'
                  - Ref: AWS::AccountId
                  - ":root"
            Effect: Allow
            Sid: Enable IAM User Permissions
            Action: kms:*
